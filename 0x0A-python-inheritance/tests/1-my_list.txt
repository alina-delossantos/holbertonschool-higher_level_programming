=============
1-my_list.py
=============

takes list and prints it in ascending order
Fx assumptions: input is ints

     >>> MyList = __import__('1-my_list').MyList


     >>> module_doc = __import__('1-my_list').__doc__
     >>> print(len(module_doc) > 0)
     True

     >>> class_doc = __import__('1-my_list').MyList.__doc__
     >>> print(len(class_doc) > 0)
     True

     >>> function_doc = __import__('1-my_list').MyList.print_sorted.__doc__
     >>> print(len(function_doc) > 0)
     True

=================
list with ints
=================

     >>> MyList = __import__('1-my_list').MyList
     >>> my_list = MyList()
     >>> my_list.append(5)
     >>> my_list.append(4)
     >>> my_list.append(3)
     >>> my_list.append(2)
     >>> my_list.append(1)
     >>> my_list.append(0)
     >>> print(my_list)
     [5, 4, 3, 2, 1, 0]
     >>> my_list.print_sorted()
     [0, 1, 2, 3, 4, 5]
     >>> print(my_list)
     [5, 4, 3, 2, 1, 0]

     >>> my_list = MyList()
     >>> my_list.append(222)
     >>> my_list.append(333)
     >>> my_list.append(444)
     >>> my_list.append(555)
     >>> my_list.append(999)
     >>> my_list.append(777)
     >>> print(my_list)
     [222, 333, 444, 555, 999, 777]
     >>> my_list.print_sorted()
     [222, 333, 444, 555, 777, 999]
     >>> print(my_list)
     [222, 333, 444, 555, 999, 777]

==========
list with one element
==========

     >>> my_list = MyList()
     >>> my_list.append(7)
     >>> print(my_list)
     [7]
     >>> my_list.print_sorted()
     [7]

================
List with negative ints
================

     >>> my_list = MyList()
     >>> my_list.append(-1)
     >>> my_list.append(-3)
     >>> my_list.append(-2)
     >>> my_list.append(3)
     >>> my_list.append(5)
     >>> print(my_list)
     [-1, -3, -2, 3, 5]
     >>> my_list.print_sorted()
     [-3, -2, -1, 3, 5]
     >>> print(my_list)
     [-1, -3, -2, 3, 5]

==========
Passing empty list
==========
     >>> my_list = MyList()
     >>> print(my_list)
     []
     >>> my_list.print_sorted()
     []
     >>> print(my_list)
     []
