The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

Importing fx from module
	  >>> add_integer = __import__('0-add_integer').add_integer

Checks sum of positive nbrs:
       >>> add_integer(7, 2)
       9

Ckecks sum of negative and positive nbr:
       >>> add_integer(-1, 8)
       7

Checks sum of positive and negative nbr:
       >>> add_integer(1, -8)
       -7

Checks sum of negative nbrs:
        >>> add_integer(-8, -8)
        -16

Checks sum of float and int:
       >>> add_integer(2.278494794, 1)
       3

Checks sum of int and float:
       >>> add_integer(3, 4.2)
       7

Checks sum of two floats:
        >>> add_integer(2.21, 4.2)
        6

Checks adding long int:
        >>> add_integer(1, 999999999999999999999999999999)
	1000000000000000000000000000000

Checks adding int and non-nbr:
        >>> add_integer(1, "tuvieja")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Checks adding non-nbr and int:
        >>> add_integer("larrompecorazones", 1)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Checks adding non-nbr and int:
        >>> add_integer([0,1], {"teletubbie": "lala"})
        Traceback (most recent call last):
	...
	TypeError: a must be an integer

Checks adding infinity:
        >>> add_integer(float('inf'), 2)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

Checks adding bool and int:
        >>> add_integer(True, 3)
        Traceback (most recent call last):
        ...
        TypeError: a must be an integer

Checks adding int and bool:
        >>> add_integer(3, False)
        Traceback (most recent call last):
        ...
        TypeError: b must be an integer

Checks adding NaN and int:
        >>> add_integer(float('nan'), 1)
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

Checks adding one argument:
       	>>> add_integer(0)
       	98

Checks passing no arguments:
       >>> add_integer()
       Traceback (most recent call last):
       ...
       TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

Checks more than 2 args:
       >>> add_integer(7, 2, 4)
       Traceback (most recent call last):
       ...
       TypeError: add_integer() takes 2 positional arguments but 3 were given

Checks passing None:
       >>> add_integer(None)
       Traceback (most recent call last):
       TypeError: a must be an integer
